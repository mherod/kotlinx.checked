version: 2
references:
  cache_key_dependencies: &cache_key_dependencies
    key: deps-cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum ".circleci/config.yml" }}
  cache_key_build: &cache_key_build
    key: build-cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum ".circleci/config.yml" }}-{{ .Branch }}
  restore_cache_dependencies: &restore_cache_dependencies
    restore_cache:
      <<: *cache_key_dependencies
  restore_cache_build: &restore_cache_build
    restore_cache:
      <<: *cache_key_build
  save_cache_dependencies: &save_cache_dependencies
    save_cache:
      <<: *cache_key_dependencies
      paths:
        - ~/.m2
        - ~/.gradle
  save_cache_build: &save_cache_build
    save_cache:
      <<: *cache_key_build
      paths:
        - ~/workspace/.gradle
        - ~/workspace/build
        - ~/workspace/app/build
  workspace: &workspace ~/workspace
  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      TERM: dumb
      JVM_OPTS: "-Xmx3200m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx3200m"'
      GRADLE_BUILD_TASKS: 'assembleDebug assembleDebugAndroidTest testDebugUnitTest lintDebug'
jobs:
  build:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache_dependencies
      - *restore_cache_build
      - run: ( yes | ${ANDROID_HOME}/tools/bin/sdkmanager --licenses ) || true
      - run: find . -regex ".*/build/.*" -delete
      - run: echo ${GRADLE_BUILD_TASKS}
      - run:
          name: Run Build
          command: ./gradlew ${GRADLE_BUILD_TASKS} --build-cache || ./gradlew cleanBuildCache clean ${GRADLE_BUILD_TASKS} --rerun-tasks
      - *save_cache_dependencies
      - *save_cache_build
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/.*/TEST-.*xml" -exec cp {} ~/junit/ \;
      - run:
          name: Save artifact
          command: |
            mkdir -p ~/builds/
            find . -type f -regex ".*/build/.*/app.*apk" -exec cp {} ~/builds/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
          destination: reports
      - store_artifacts:
          path: ~/builds
          destination: builds
workflows:
  version: 2
  workflow:
    jobs:
      - build
